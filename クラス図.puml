@startuml
class org.jcat.plugin.impl.ShowNonPrintingPlugin {
+ String replaceLine(Context,String)
+ boolean isEnabled()
}

abstract class org.jcat.output.AbstractOutput {
# String encode
# String lineFeed
# OutputStream os
+ void write(byte[])
+ void write(String)
+ void writeLine(String)
+ void flush()
+ void close()
+ String setEncode(String)
+ String getEncode()
+ String getLineFeed()
+ void setLineFeed(String)
}


class org.jcat.plugin.impl.ShowNumberNonBlankPlugin {
+ String replaceLine(Context,String)
+ boolean isEnabled()
}

class org.jcat.input.FileInput {
}
class org.jcat.context.Context {
+ void rotate(String)
+ String getPrevious()
+ String getCurrent()
+ long getLineNum()
+ long incrementLineNum()
+ boolean isPreviousHasLF()
+ boolean isCurrentHasLF()
}

class org.jcat.plugin.impl.ShowTabsPlugin {
+ String replaceLine(Context,String)
+ boolean isEnabled()
}

interface org.jcat.plugin.IPlugin {
+ void setOption(CatOption)
+ boolean isEnabled()
}

interface org.jcat.plugin.IUsagePlugin {
+ void usage(IOutput)
}

interface org.jcat.input.IInput {
+ String read()
+ void close()
+ String setEncode(String)
+ String getEncode()
}

class org.jcat.plugin.impl.UsageHelpPlugin {
+ void show(IOutput)
+ boolean isEnabled()
}

class org.jcat.output.FileOutput {
}
abstract class org.jcat.plugin.AbstractReplacePlugin {
+ String replace(Context,String)
# {abstract}String replaceLine(Context,String)
}

abstract class org.jcat.input.AbstractInput {
# String encode
# BufferedReader is
# StringBuilder buffer
# boolean streamFinished
+ String read()
+ String getEncode()
+ String setEncode(String)
+ void close()
}


abstract class org.jcat.plugin.AbstractUsagePlugin {
+ void usage(IOutput)
# {abstract}void show(IOutput)
}

class org.jcat.JCat {
+ void exec()
+ {static} void main(String[])
}

class org.jcat.plugin.impl.ShowEndsPlugin {
+ String replaceLine(Context,String)
+ boolean isEnabled()
}

interface org.jcat.plugin.IReplacePlugin {
+ String replace(Context,String)
}

class org.jcat.plugin.impl.ShowSqueezeBlankPlugin {
+ String replaceLine(Context,String)
+ boolean isEnabled()
}

class org.jcat.plugin.PluginManager {
# CatOption option
# Set<IReplacePlugin> replacePlugins
# Set<IUsagePlugin> usagePlugins
+ void addReplacePlugin(IReplacePlugin[])
+ void addUsagePlugin(IUsagePlugin[])
+ void usage(IOutput)
+ String replace(Context,String)
}


class org.jcat.output.StandardOutput {
}
class org.jcat.JCatTest {
+ {static} Test suite()
+ void testUsageHelp()
+ void testUsageVersion()
+ void testNothingOptions()
+ void testShowNumberShortOption()
+ void testShowNumberLongOption()
+ void testShowNumberNonblankShortOption()
+ void testShowNumberNonblankLongOption()
+ void testShowNumberSqueezeShortOption()
+ void testShowNumberSqueezeLongOption()
+ void testShowTabsShortOption()
+ void testShowTabsLongOption()
+ void testShowEndsShortOption()
+ void testShowEndsLongOption()
+ void testShowNonprintingShortOption()
+ void testShowNonprintingLongOption()
+ void testComplexAOption()
+ void testComplexEOption()
+ void testComplexTOption()
+ void testComplexVETOption()
+ void testComplexVEOption()
+ void testComplexVTOption()
}

class org.jcat.cmd.CatOption {
+ boolean isUsageEnabled()
+ boolean isCatEnabled()
+ List<String> getFileList()
+ void addFileList(String)
+ boolean isShowAll()
+ boolean isShowNumberNonBlank()
+ boolean isShowEnds()
+ boolean isShowNumber()
+ boolean isShowSqueezeBlank()
+ boolean isShowTabs()
+ boolean isIgnored()
+ boolean isShowNonPrinting()
+ boolean isUsageHelp()
+ boolean isUsageVersion()
}

class org.jcat.plugin.impl.ShowNumberPlugin {
+ String replaceLine(Context,String)
+ boolean isEnabled()
}

interface org.jcat.output.IOutput {
+ void write(byte[])
+ void write(String)
+ void writeLine(String)
+ String setEncode(String)
+ String getEncode()
+ void setLineFeed(String)
+ String getLineFeed()
+ void flush()
+ void close()
}

abstract class org.jcat.plugin.AbstractPlugin {
# CatOption option
+ void setOption(CatOption)
}


class org.jcat.plugin.impl.UsageVersionPlugin {
+ void show(IOutput)
+ boolean isEnabled()
}

class org.jcat.input.StandardInput {
}


org.jcat.plugin.AbstractReplacePlugin <|-- org.jcat.plugin.impl.ShowNonPrintingPlugin
org.jcat.output.IOutput <|.. org.jcat.output.AbstractOutput
org.jcat.plugin.AbstractReplacePlugin <|-- org.jcat.plugin.impl.ShowNumberNonBlankPlugin
org.jcat.input.AbstractInput <|-- org.jcat.input.FileInput
org.jcat.plugin.AbstractReplacePlugin <|-- org.jcat.plugin.impl.ShowTabsPlugin
org.jcat.plugin.IPlugin <|-- org.jcat.plugin.IUsagePlugin
java.io.Closeable <|-- org.jcat.input.IInput
org.jcat.plugin.AbstractUsagePlugin <|-- org.jcat.plugin.impl.UsageHelpPlugin
org.jcat.output.AbstractOutput <|-- org.jcat.output.FileOutput
org.jcat.plugin.IReplacePlugin <|.. org.jcat.plugin.AbstractReplacePlugin
org.jcat.plugin.AbstractPlugin <|-- org.jcat.plugin.AbstractReplacePlugin
org.jcat.input.IInput <|.. org.jcat.input.AbstractInput
org.jcat.plugin.IUsagePlugin <|.. org.jcat.plugin.AbstractUsagePlugin
org.jcat.plugin.AbstractPlugin <|-- org.jcat.plugin.AbstractUsagePlugin
org.jcat.plugin.AbstractReplacePlugin <|-- org.jcat.plugin.impl.ShowEndsPlugin
org.jcat.plugin.IPlugin <|-- org.jcat.plugin.IReplacePlugin
org.jcat.plugin.AbstractReplacePlugin <|-- org.jcat.plugin.impl.ShowSqueezeBlankPlugin
org.jcat.output.AbstractOutput <|-- org.jcat.output.StandardOutput
junit.framework.TestCase <|-- org.jcat.JCatTest
org.jcat.plugin.AbstractReplacePlugin <|-- org.jcat.plugin.impl.ShowNumberPlugin
java.io.Closeable <|-- org.jcat.output.IOutput
org.jcat.plugin.IPlugin <|.. org.jcat.plugin.AbstractPlugin
org.jcat.plugin.AbstractUsagePlugin <|-- org.jcat.plugin.impl.UsageVersionPlugin
org.jcat.input.AbstractInput <|-- org.jcat.input.StandardInput
@enduml