@startuml
abstract class org.jcat.output.AbstractOutput {
# String encode
# String lineFeed
# OutputStream os
+ void write(byte[])
+ void write(String)
+ void writeLine(String)
+ void close()
+ String setEncode(String)
+ String getEncode()
+ String getLineFeed()
+ void setLineFeed(String)
}


class org.jcat.context.GlobalContext {
+ long getLineNumOutput()
+ void setLineNumOutput(long)
+ long incrementLineNumOutput()
}

class org.jcat.input.FileInput {
}
class org.jcat.AppTest {
+ {static} Test suite()
+ void testApp()
}

class org.jcat.plugin.impl.ReplaceShowNonPrintingPlugin {
+ String replaceLine(StreamContext,String)
+ boolean isEnabled()
}

class org.jcat.plugin.impl.ReplaceTabsPlugin {
+ String replaceLine(StreamContext,String)
+ boolean isEnabled()
}

interface org.jcat.plugin.IPlugin {
+ void setOption(CatOption)
+ boolean isEnabled()
}

interface org.jcat.plugin.IUsagePlugin {
+ void usage()
}

interface org.jcat.input.IInput {
+ String read()
+ void close()
+ String setEncode(String)
+ String getEncode()
}

class org.jcat.plugin.impl.UsageHelpPlugin {
+ void show()
+ boolean isEnabled()
}

class org.jcat.context.StreamContext {
+ void addLine(String)
+ CatOption getOption()
+ void setOption(CatOption)
+ String getLinePrevious()
+ void setLinePrevious(String)
+ String getLineCurrent()
+ void setLineCurrent(String)
+ long getLineNumOutput()
+ void setLineNumOutput(long)
+ long incrementLineNumOutput()
}

class org.jcat.plugin.impl.ReplaceNumberPlugin {
+ String replaceLine(StreamContext,String)
+ boolean isEnabled()
}

class org.jcat.plugin.impl.ReplaceNumberNonBlankPlugin {
+ String replaceLine(StreamContext,String)
+ boolean isEnabled()
}

class org.jcat.plugin.PluginHolder {
# CatOption option
# Set<IReplacePlugin> replacePlugins
# Set<IUsagePlugin> usagePlugins
+ void addReplacePlugin(IReplacePlugin[])
+ void addUsagePlugin(IUsagePlugin[])
+ void usage()
+ String replace(StreamContext,String)
}


class org.jcat.output.FileOutput {
}
abstract class org.jcat.plugin.AbstractReplacePlugin {
+ String replace(StreamContext,String)
# {abstract}String replaceLine(StreamContext,String)
}

abstract class org.jcat.input.AbstractInput {
# String encode
# BufferedReader is
# StringBuilder buffer
# boolean streamFinished
+ String read()
+ String getEncode()
+ String setEncode(String)
+ void close()
}


abstract class org.jcat.plugin.AbstractUsagePlugin {
+ void usage()
# {abstract}void show()
}

class org.jcat.JCat {
+ void exec()
+ {static} void main(String[])
}

interface org.jcat.plugin.IReplacePlugin {
+ String replace(StreamContext,String)
}

class org.jcat.output.StandardOutput {
}
class org.jcat.plugin.impl.ReplaceEndsPlugin {
+ String replaceLine(StreamContext,String)
+ boolean isEnabled()
}

class org.jcat.cmd.CatOption {
+ boolean isUsageEnabled()
+ List<String> getFileList()
+ void addFileList(String)
+ boolean isShowAll()
+ boolean isNumberNonBlank()
+ boolean isShowEnds()
+ boolean isNumber()
+ boolean isSqueezeBlank()
+ boolean isShowTabs()
+ boolean isIgnored()
+ boolean isShowNonPrinting()
+ boolean isShowHelp()
+ boolean isShowVersion()
}

interface org.jcat.output.IOutput {
+ void write(byte[])
+ void write(String)
+ void writeLine(String)
+ void close()
+ String setEncode(String)
+ String getEncode()
+ void setLineFeed(String)
+ String getLineFeed()
}

abstract class org.jcat.plugin.AbstractPlugin {
# CatOption option
+ void setOption(CatOption)
}


class org.jcat.plugin.impl.UsageVersionPlugin {
+ void show()
+ boolean isEnabled()
}

class org.jcat.input.StandardInput {
}
class org.jcat.plugin.impl.ReplaceSqueezeBlankPlugin {
+ String replaceLine(StreamContext,String)
+ boolean isEnabled()
}



org.jcat.output.IOutput <|.. org.jcat.output.AbstractOutput
org.jcat.input.AbstractInput <|-- org.jcat.input.FileInput
junit.framework.TestCase <|-- org.jcat.AppTest
org.jcat.plugin.AbstractReplacePlugin <|-- org.jcat.plugin.impl.ReplaceShowNonPrintingPlugin
org.jcat.plugin.AbstractReplacePlugin <|-- org.jcat.plugin.impl.ReplaceTabsPlugin
org.jcat.plugin.IPlugin <|-- org.jcat.plugin.IUsagePlugin
java.io.Closeable <|-- org.jcat.input.IInput
org.jcat.plugin.AbstractUsagePlugin <|-- org.jcat.plugin.impl.UsageHelpPlugin
org.jcat.plugin.AbstractReplacePlugin <|-- org.jcat.plugin.impl.ReplaceNumberPlugin
org.jcat.plugin.AbstractReplacePlugin <|-- org.jcat.plugin.impl.ReplaceNumberNonBlankPlugin
org.jcat.output.AbstractOutput <|-- org.jcat.output.FileOutput
org.jcat.plugin.IReplacePlugin <|.. org.jcat.plugin.AbstractReplacePlugin
org.jcat.plugin.AbstractPlugin <|-- org.jcat.plugin.AbstractReplacePlugin
org.jcat.input.IInput <|.. org.jcat.input.AbstractInput
org.jcat.plugin.IUsagePlugin <|.. org.jcat.plugin.AbstractUsagePlugin
org.jcat.plugin.AbstractPlugin <|-- org.jcat.plugin.AbstractUsagePlugin
org.jcat.plugin.IPlugin <|-- org.jcat.plugin.IReplacePlugin
org.jcat.output.AbstractOutput <|-- org.jcat.output.StandardOutput
org.jcat.plugin.AbstractReplacePlugin <|-- org.jcat.plugin.impl.ReplaceEndsPlugin
java.io.Closeable <|-- org.jcat.output.IOutput
org.jcat.plugin.IPlugin <|.. org.jcat.plugin.AbstractPlugin
org.jcat.plugin.AbstractUsagePlugin <|-- org.jcat.plugin.impl.UsageVersionPlugin
org.jcat.input.AbstractInput <|-- org.jcat.input.StandardInput
org.jcat.plugin.AbstractReplacePlugin <|-- org.jcat.plugin.impl.ReplaceSqueezeBlankPlugin
@enduml